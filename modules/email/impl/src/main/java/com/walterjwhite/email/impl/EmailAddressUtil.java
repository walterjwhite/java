package com.walterjwhite.email.impl;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class EmailAddressUtil {
  public static final Pattern EMAIL_ADDRESS_PATTERN =
      Pattern.compile(
          "(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)*\\<(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*(?:,@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*)*:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*\\>(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)*:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)*\\<(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*(?:,@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*)*:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*\\>(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:,\\s*(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)*\\<(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*(?:,@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*)*:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
              + "\\\\]|\\\\.|(?:(?:\\r"
              + "\\n"
              + ")?[ \\t]))*\"(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*@(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*)(?:\\.(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
              + "\\\\]|\\\\.)*\\](?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*\\>(?:(?:\\r"
              + "\\n"
              + ")?[ \\t])*))*)?;\\s*)");

  /**
   * Returns an email address broken down into its parts (name (optional), and email address)
   *
   * @param emailAddressInput email address string
   * @return the parts of an email address (name, and deliverable email address)
   */
  public static String[] getEmailAddressParts(final String emailAddressInput) {
    final String[] emailAddressParts = emailAddressInput.split("<");

    String emailAddress = "";
    String name = "";
    for (String emailAddressPart : emailAddressParts) {
      emailAddressPart = emailAddressPart.trim().replace(">", "").replace("\"", "");
      final Matcher emailAddressMatcher = EMAIL_ADDRESS_PATTERN.matcher(emailAddressPart);

      if (emailAddressMatcher.matches()) emailAddress = emailAddressPart;
      else name = emailAddressPart.trim();
    }

    if (emailAddress == null || emailAddress.isEmpty())
      throw new IllegalArgumentException("No email address was found in:" + emailAddressInput);

    return new String[] {name, emailAddress};
  }
}
