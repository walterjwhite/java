<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <url>https://github.com.walterjwhite/java.git</url>
  <groupId>com.walterjwhite</groupId>
  <artifactId>java</artifactId>
  <version>0.3.6-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Java</name>
  <description>root project for all Java projects</description>
  <modules>
    <module>advice</module>
    <module>aspect</module>
    <module>configuration</module>
    <module>dependencies</module>
    <module>examples</module>
    <module>infrastructure</module>
    <module>modules</module>
    <module>utilities</module>
  </modules>
  <dependencies>
    <dependency>
      <groupId>org.junit</groupId>
      <artifactId>junit-bom</artifactId>
      <version>5.10.2</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.25.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>${src.directory}</sourceDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
          <dependencies>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M7</version>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <compilerArguments>
            <endorseddirs>${endorsed.dir}</endorseddirs>
          </compilerArguments>
        </configuration>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>1.7.5</version>
        <configuration>
          <targetClasses>
            <param>com.walterjwhite.*</param>
          </targetClasses>
          <targetTests>
            <param>com.walterjwhite.*</param>
          </targetTests>
          <avoidCallsTo>
            <avoidCallTo>ch.qos.logback</avoidCallTo>
            <avoidCallTo>org.slf4j</avoidCallTo>
          </avoidCallsTo>
        </configuration>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>test</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/target/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.10.0</version>
        <configuration>
          <excludes>
            <exclude>com.walterjwhite.*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Build>${project.version}.${git.commit.id.abbrev}</Implementation-Build>
            </manifestEntries>
          </archive>
          <resources>
            <entityReference>
              <directory>src/main/java</directory>
              <includes>
                <include>**/*properties</include>
              </includes>
            </entityReference>
          </resources>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.5</version>
      </plugin>
    </plugins>
  </reporting>
  <licenses>
    <license>
      <url>https://opensource.org/licenses/BSD-3-Clause</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <email>3d6b84b0@gmail.com</email>
      <organization>com.walterjwhite</organization>
      <organizationUrl>http://github.com.walterjwhite</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:ssh://git@localhost:/projects/active/github.com/java.git</connection>
    <developerConnection>scm:git:ssh://git@localhost:/projects/active/github.com/java.git</developerConnection>
    <url>https://github.com.walterjwhite/java.git</url>
  </scm>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  <properties>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.plugin.version>3.12.1</maven.compiler.plugin.version>
    <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <application.environment>Development</application.environment>
    <src.directory>src/main/java</src.directory>
    <lombok.log.fieldName>LOGGER</lombok.log.fieldName>
  </properties>
  <profiles>
    <profile>
      <id>publish</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.danielflower.mavenplugins</groupId>
            <artifactId>multi-module-maven-release-plugin</artifactId>
            <version>3.6.4</version>
            <configuration>
              <releaseGoals>
                <releaseGoal>deploy</releaseGoal>
              </releaseGoals>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>3.0.1</version>
            <configuration>
              <localCheckout>true</localCheckout>
              <pushChanges>false</pushChanges>
              <mavenExecutorId>forked-path</mavenExecutorId>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <arguments>-Dmaven.test.skipTests=true -Dmaven.test.skip=true</arguments>
              <skip>true</skip>
              <skipTests>true</skipTests>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-provider-gitexe</artifactId>
                <version>2.0.1</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <version>4.9.10</version>
            <executions>
              <execution>
                <id>get-the-git-infos</id>
                <goals>
                  <goal>revision</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
            <configuration>
              <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.13</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <stagingProgressTimeoutMinutes>60</stagingProgressTimeoutMinutes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
            <version>1.18.30</version>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>delombok</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <addOutputDirectory>false</addOutputDirectory>
              <sourceDirectory>src/main/java</sourceDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.6.3</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludePackageNames>java.jpametamodel.*</excludePackageNames>
              <sourcepath>target/generated-sources/delombok</sourcepath>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <src.directory>target/generated-sources/delombok</src.directory>
      </properties>
    </profile>
    <profile>
      <id>error-prone</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven.compiler.plugin.version}</version>
              <configuration>
                <release>${java.version}</release>
                <includes>
                  <include>target/generated-sources/delombok/**/*.java</include>
                </includes>
                <excludes>
                  <exclude>src/main/java/**/*.java</exclude>
                </excludes>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>enforce-dependencies</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <rules>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>analyze</id>
                <goals>
                  <goal>analyze-only</goal>
                </goals>
                <configuration>
                  <failOnWarning>true</failOnWarning>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>executable-jar</id>
      <activation>
        <file>
          <exists>src/main/resources/simplelogger.properties</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.walterjwhite.java.dependencies</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>0.3.6-SNAPSHOT</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.infrastructure.inject.modules.cli</groupId>
          <artifactId>api</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <version>2.1.0</version>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <scripts>
                <script><![CDATA[
            new org.reflections.Reflections(
			new org.reflections.util.ConfigurationBuilder().forPackage("com.walterjwhite")
			.setScanners(org.reflections.scanners.Scanners.values()))
			.save("${project.build.outputDirectory}/META-INF/reflections/${project.groupId}-${project.artifactId}-reflections.xml")
          ]]></script>
              </scripts>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>2.4.12</version>
                <scope>runtime</scope>
              </dependency>
              <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.10.2</version>
              </dependency>
              <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>2.1.3</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.1</version>
            <configuration>
              <archive>
                <manifest>
                  <classpathLayoutType>repository</classpathLayoutType>
                  <addClasspath>true</addClasspath>
                  <classpathPrefix>lib/</classpathPrefix>
                  <mainClass>com.walterjwhite.inject.cli.CLIApplication</mainClass>
                </manifest>
                <manifestEntries>
                  <ApplicationEnvironment>${application.environment}</ApplicationEnvironment>
                  <ApplicationSCMVersion>${git.commit.id.abbrev}</ApplicationSCMVersion>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>install</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <useRepositoryLayout>true</useRepositoryLayout>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <application.environment>Development</application.environment>
      </properties>
    </profile>
    <profile>
      <id>shaded-jar</id>
      <activation>
        <file>
          <exists>.shaded</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <finalName>${artifactId}-shaded</finalName>
                  <shadedArtifactAttached>true</shadedArtifactAttached>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <manifestEntries>
                        <Premain-Class>com.walterjwhite.inject.cli.CLIApplication</Premain-Class>
                        <ApplicationEnvironment>${application.environment}</ApplicationEnvironment>
                        <ApplicationSCMVersion>${git.commit.id.abbrev}</ApplicationSCMVersion>
                        <Can-Redefine-Classes>false</Can-Redefine-Classes>
                        <Can-Retransform-Classes>true</Can-Retransform-Classes>
                        <Class-Path></Class-Path>
                      </manifestEntries>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>agent</id>
      <activation>
        <file>
          <exists>.agent</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.walterjwhite.java.dependencies</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>0.3.6-SNAPSHOT</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.infrastructure.inject.modules.cli</groupId>
          <artifactId>agent</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.advice.transform</groupId>
          <artifactId>api</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.dependencies</groupId>
          <artifactId>byte-buddy</artifactId>
          <version>0.3.6-SNAPSHOT</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.infrastructure.property.modules</groupId>
          <artifactId>walterjwhite-secrets</artifactId>
          <version>0.3.6-SNAPSHOT</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <version>2.1.0</version>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <scripts>
                <script><![CDATA[
            new org.reflections.Reflections(
			new org.reflections.util.ConfigurationBuilder().forPackage("com.walterjwhite")
			.setScanners(org.reflections.scanners.Scanners.values()))
			.save("${project.build.outputDirectory}/META-INF/reflections/${project.groupId}-${project.artifactId}-reflections.xml")
          ]]></script>
              </scripts>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>2.4.12</version>
                <scope>runtime</scope>
              </dependency>
              <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.10.2</version>
              </dependency>
              <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>2.1.3</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.1</version>
            <configuration>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <classpathPrefix>lib/</classpathPrefix>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                </manifest>
                <manifestEntries>
                  <Implementation-Version>${project.version}</Implementation-Version>
                  <Implementation-Build>${project.version}.${git.commit.id.abbrev}</Implementation-Build>
                  <Premain-Class>com.walterjwhite.inject.cli.AgentCLIApplication</Premain-Class>
                  <ApplicationEnvironment>${application.environment}</ApplicationEnvironment>
                  <ApplicationSCMVersion>${git.commit.id.abbrev}</ApplicationSCMVersion>
                  <Can-Redefine-Classes>false</Can-Redefine-Classes>
                  <Can-Retransform-Classes>true</Can-Retransform-Classes>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>advice</id>
      <activation>
        <file>
          <exists>.advice</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.walterjwhite.java.advice.delay</groupId>
          <artifactId>api</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.advice.heartbeat</groupId>
          <artifactId>api</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.advice</groupId>
          <artifactId>closeable</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.advice.logging</groupId>
          <artifactId>api</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.advice.logging</groupId>
          <artifactId>plugin</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
        <dependency>
          <groupId>com.walterjwhite.java.advice.timeout</groupId>
          <artifactId>api</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-maven-plugin</artifactId>
            <version>1.14.11</version>
            <executions>
              <execution>
                <goals>
                  <goal>transform</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.walterjwhite.java.advice.delay</groupId>
                <artifactId>plugin</artifactId>
                <version>0.3.6-SNAPSHOT</version>
              </dependency>
              <dependency>
                <groupId>com.walterjwhite.java.advice.heartbeat</groupId>
                <artifactId>plugin</artifactId>
                <version>0.3.6-SNAPSHOT</version>
              </dependency>
              <dependency>
                <groupId>com.walterjwhite.java.advice</groupId>
                <artifactId>closeable</artifactId>
                <version>0.3.6-SNAPSHOT</version>
              </dependency>
              <dependency>
                <groupId>com.walterjwhite.java.advice.logging</groupId>
                <artifactId>plugin</artifactId>
                <version>0.3.6-SNAPSHOT</version>
              </dependency>
              <dependency>
                <groupId>com.walterjwhite.java.advice.timeout</groupId>
                <artifactId>plugin</artifactId>
                <version>0.3.6-SNAPSHOT</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>lombok</id>
      <activation>
        <file>
          <missing>.no-lombok</missing>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <version>1.18.30</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>spring-boot</id>
      <activation>
        <file>
          <exists>.spring-boot</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>repackage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>com.walterjwhite.java.dependencies</groupId>
          <artifactId>spring-boot</artifactId>
          <version>0.3.6-SNAPSHOT</version>
          <type>pom</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>datanucleus</id>
      <activation>
        <file>
          <exists>.datanucleus</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.walterjwhite.java.dependencies</groupId>
          <artifactId>datanucleus-jdo</artifactId>
          <version>0.3.6-SNAPSHOT</version>
          <type>pom</type>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-maven-plugin</artifactId>
            <version>6.0.0-release</version>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>enhance</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>criteria</id>
      <activation>
        <file>
          <exists>.criteria</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-jpamodelgen</artifactId>
          <version>6.4.3.Final</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>criteria-query</id>
      <activation>
        <file>
          <exists>.criteria-query</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.walterjwhite.java.infrastructure.datastore.providers</groupId>
          <artifactId>criteria</artifactId>
          <version>0.3.6-SNAPSHOT</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
